name: Run tests

on:
  push:
    paths:
      - '**.py'
      - 'requirements*.txt'
      - 'tests/**'
  pull_request:
    paths:
      - '**.py'
      - 'requirements*.txt'
      - 'tests/**'

jobs:
    test:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'

        - name: Run Ubuntu setup script and install RL extras
          run: |
            bash scripts/setup_ubuntu.sh
            pip install .[rl]

        - name: Verify pinned requirements
          run: |
            pip freeze | sort > requirements.lock
            cat requirements-core.txt requirements-rl.txt | sort > requirements.expected
            diff -u requirements.expected requirements.lock

        - name: Install linting and test tools
          run: |
            pip install .[test]
            pip install pre-commit

        - name: Ensure config docs up to date
          run: |
            python tools/config_docs.py
            git diff --exit-code docs/config.md docs/config.html

        - name: Run linters and type checks
          run: |
            if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
              CHANGED_FILES=$(git diff --name-only origin/${GITHUB_BASE_REF}... | tr '\n' ' ')
            else
              CHANGED_FILES=$(git diff --name-only HEAD^ | tr '\n' ' ')
            fi
            if [ -n "$CHANGED_FILES" ]; then
              pre-commit run --files $CHANGED_FILES
            fi

        - name: Run quality checks and tests
          run: |
            python scripts/check_skeletons.py
            pytest -q --ignore=tests/resource_tiers --ignore=tests/e2e

        - name: Run resource tier smoke tests
          run: |
            failed=0
            for tier in lite standard gpu; do
              echo "Running tier $tier"
              if ! RESOURCE_TIER=$tier pytest -q tests/resource_tiers; then
                failed=1
              fi
            done
            exit $failed

        - name: Run orchestrator tier e2e tests
          run: pytest -q tests/e2e

        - name: Archive pytest logs
          if: always()
          id: archive_logs
          run: python tools/archive_test_logs.py --scope commit --output logs/test_runs/${{ github.sha }}-logs.tar.gz

        - name: Upload test log artefact
          if: always() && steps.archive_logs.outputs.archive-path != ''
          uses: actions/upload-artifact@v3
          with:
            name: test-logs-${{ github.sha }}
            path: ${{ steps.archive_logs.outputs.archive-path }}
            retention-days: 7

        - name: Check data version hashes
          run: python scripts/check_data_versions.py
