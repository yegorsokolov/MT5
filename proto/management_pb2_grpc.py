# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import management_pb2 as management__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in management_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartBot = channel.unary_unary(
                '/management.ManagementService/StartBot',
                request_serializer=management__pb2.StartRequest.SerializeToString,
                response_deserializer=management__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.StopBot = channel.unary_unary(
                '/management.ManagementService/StopBot',
                request_serializer=management__pb2.BotIdRequest.SerializeToString,
                response_deserializer=management__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.BotStatus = channel.unary_unary(
                '/management.ManagementService/BotStatus',
                request_serializer=management__pb2.BotStatusRequest.SerializeToString,
                response_deserializer=management__pb2.BotStatusResponse.FromString,
                _registered_method=True)
        self.GetLogs = channel.unary_unary(
                '/management.ManagementService/GetLogs',
                request_serializer=management__pb2.LogRequest.SerializeToString,
                response_deserializer=management__pb2.LogResponse.FromString,
                _registered_method=True)
        self.ListBots = channel.unary_unary(
                '/management.ManagementService/ListBots',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=management__pb2.BotList.FromString,
                _registered_method=True)
        self.UpdateConfig = channel.unary_unary(
                '/management.ManagementService/UpdateConfig',
                request_serializer=management__pb2.ConfigChange.SerializeToString,
                response_deserializer=management__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.GetRiskStatus = channel.unary_unary(
                '/management.ManagementService/GetRiskStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=management__pb2.RiskStatus.FromString,
                _registered_method=True)


class ManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BotStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRiskStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartBot': grpc.unary_unary_rpc_method_handler(
                    servicer.StartBot,
                    request_deserializer=management__pb2.StartRequest.FromString,
                    response_serializer=management__pb2.StatusResponse.SerializeToString,
            ),
            'StopBot': grpc.unary_unary_rpc_method_handler(
                    servicer.StopBot,
                    request_deserializer=management__pb2.BotIdRequest.FromString,
                    response_serializer=management__pb2.StatusResponse.SerializeToString,
            ),
            'BotStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.BotStatus,
                    request_deserializer=management__pb2.BotStatusRequest.FromString,
                    response_serializer=management__pb2.BotStatusResponse.SerializeToString,
            ),
            'GetLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLogs,
                    request_deserializer=management__pb2.LogRequest.FromString,
                    response_serializer=management__pb2.LogResponse.SerializeToString,
            ),
            'ListBots': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBots,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=management__pb2.BotList.SerializeToString,
            ),
            'UpdateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConfig,
                    request_deserializer=management__pb2.ConfigChange.FromString,
                    response_serializer=management__pb2.StatusResponse.SerializeToString,
            ),
            'GetRiskStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRiskStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=management__pb2.RiskStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'management.ManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('management.ManagementService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/management.ManagementService/StartBot',
            management__pb2.StartRequest.SerializeToString,
            management__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/management.ManagementService/StopBot',
            management__pb2.BotIdRequest.SerializeToString,
            management__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BotStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/management.ManagementService/BotStatus',
            management__pb2.BotStatusRequest.SerializeToString,
            management__pb2.BotStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/management.ManagementService/GetLogs',
            management__pb2.LogRequest.SerializeToString,
            management__pb2.LogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/management.ManagementService/ListBots',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            management__pb2.BotList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/management.ManagementService/UpdateConfig',
            management__pb2.ConfigChange.SerializeToString,
            management__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRiskStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/management.ManagementService/GetRiskStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            management__pb2.RiskStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
