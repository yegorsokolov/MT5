[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mt5"
version = "0.1.0"
description = "Trading utilities and strategies for MetaTrader5 automation."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [{ name = "MT5 Contributors" }]
dependencies = [
    "pandas",
    "pyarrow",
    "scikit-learn",
    "numpy",
    "pyyaml",
    "GitPython",
    "gdown",
    "duckdb>=0.9.2",
    "dask[distributed]",
    "pandas_datareader",
    "lightgbm",
    "torch",
    "tqdm",
    "stable-baselines3",
    "sb3-contrib",
    "gym",
    "MetaTrader5",
    "ray",
    "autogluon",
    "scikit-optimize",
    "scipy",
    "river",
    "pyzmq",
    "fastapi",
    "uvicorn",
    "mlflow",
    "transformers",
    "FinGPT",
    "shap",
    "diffusers",
    "torch-geometric>=2.6",
    "statsmodels",
    "ydata-synthetic",
    "tsfresh",
    "exchange-calendars",
    "grpcio",
    "grpcio-tools",
    "backtrader",
    "freqtrade",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
gpu = ["tensorflow"]

[tool.setuptools]
py-modules = [
    "auto_optimize",
    "backtest",
    "dataset",
    "eval_rl",
    "generate_signals",
    "grpc_api",
    "log_utils",
    "metrics",
    "meta_train_nn",
    "regime",
    "realtime_train",
    "remote_api",
    "signal_queue",
    "train",
    "train_autogluon",
    "train_combined",
    "train_meta",
    "train_nn",
    "train_online",
    "train_parallel",
    "train_rl",
    "walk_forward",
]

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*"]
