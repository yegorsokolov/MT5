# MT5 environment template.
# Copy this file to `.env` and replace placeholder values with your secrets.
# Blank assignments indicate values that must be provided for the relevant integration.

# --- Secret Manager references (used by config.yaml via secret://) ---
TELEGRAM_BOT_TOKEN=8237433036:AAECLRGkzB_juDsNsh0HFKItVQw6KWyUohQ
TELEGRAM_CHAT_ID=7791272855
# Credentials for authenticated MLflow tracking servers. Create a service
# account with read/write access to experiments and provide its username.
MLFLOW_USER=
# Matching password or API token for the MLflow user above. Leave blank when
# MLflow is deployed without HTTP authentication.
MLFLOW_PASS=

# Secrets for the configuration service, local controller and encrypted
# artifacts are generated automatically by deployment/runtime_secrets.py. The
# helper writes deploy/secrets/runtime.env which systemd loads via
# EnvironmentFile.

# --- Local bot controller (replaces remote API secrets & tuning) ---
# Soft limit for resident memory in megabytes before the resource monitor
# triggers a graceful restart. Set to roughly 80% of available RAM; use 0 to
# disable the guard entirely.
MAX_RSS_MB=6144
# Aggregate CPU budget across all cores. 320 â‰ˆ 80% of a 4 vCPU instance. Use 0
# to disable CPU throttling and rely on external scheduling.
MAX_CPU_PCT=320
# Systemd provides WATCHDOG_USEC automatically when WatchdogSec is configured.
# Override only when running outside systemd to trigger sd_notify heartbeats in
# microseconds.
WATCHDOG_USEC=0
# Exponential backoff (in seconds) applied between bot restarts after crashes.
BOT_BACKOFF_BASE=1
BOT_BACKOFF_MAX=60
# Seconds without crashes before the backoff window is reset.
BOT_BACKOFF_RESET=300
# Maximum number of crashes tolerated within BOT_CRASH_WINDOW before the
# orchestrator halts automatic restarts.
BOT_MAX_CRASHES=5
# Rolling window (seconds) used to evaluate BOT_MAX_CRASHES. Keep in sync with
# your incident response expectations.
BOT_CRASH_WINDOW=600

# Encryption keys (CHECKPOINT_AES_KEY/DECISION_AES_KEY) are minted by
# deployment/runtime_secrets.py and stored alongside controller secrets.

# --- External data provider API tokens ---
FRED_API_KEY=119ae5557ea7c047f8a1d4907c76a4b3
FINNHUB_API_KEY=d38rtjpr01qthpo17csgd38rtjpr01qthpo17ct0
ALPHAVANTAGE_API_KEY=40BAAB6T1QO0OYG9
EODHD_API_TOKEN=68d1bfc6b95557.64516152
FINANCIALMODELINGPREP_API_KEY=L8TJm0qqr1kzjsximqfOSlnGz4YFQkgO

# --- LLM-assisted tooling ---
OPENAI_API_KEY=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

# --- Secret manager backends ---
# Optional HashiCorp Vault address for resolving secret:// references. Provide
# the full HTTPS URL to the Vault cluster or leave blank to rely solely on
# environment variables.
VAULT_ADDR=
# Token with read access to the KV v2 mount that stores MT5 secrets. When
# omitted, SecretManager skips Vault lookups.
VAULT_TOKEN=

# --- Observability & automation ---
# InfluxDB credentials are generated automatically by deployment/influx_bootstrap.py
# and stored in deploy/secrets/influx.env for systemd to read.
# Prometheus Pushgateway endpoint used by analytics jobs to emit one-off metrics
# (e.g. http://pushgateway:9091). Leave blank to disable push-style metrics.
# Managed automatically by deployment/prometheus_endpoints.py during
# provisioning; override only when the installer cannot infer the correct
# endpoint.
PROM_PUSH_URL=
# Prometheus HTTP API endpoint used by diagnostics to verify alert rules. Set
# to the base URL (e.g. http://prometheus:9090) when automated health checks
# should run.
# Managed automatically by deployment/prometheus_endpoints.py; leave blank
# unless you need to supply a custom value manually.
PROM_QUERY_URL=
# GitHub personal access token or app installation token used by the
# auto-updater to fetch private dependencies. Needs at least ``repo`` scope for
# private repositories.
GITHUB_TOKEN=


# Add any other environment overrides required by your deployment below.
